CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
SET(LIB_NAME ForceSensor)
SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})
MESSAGE(STATUS ${CMAKE_MODULE_PATH})

# OpenRave
find_package(OpenRAVE REQUIRED)

if( NOT OpenRAVE_FOUND )
  message(FATAL_ERROR "could not find openrave, check for openrave-config in path")
endif( NOT OpenRAVE_FOUND )

if( CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX )
  add_definitions("-fno-strict-aliasing -Wall")
endif( CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX )

if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)
  set(PLUGIN_LINK_FLAGS "")
endif()

message(STATUS "OPENRAVE_LINK_DIRS  ${OpenRAVE_LINK_DIRS}")
include_directories(${OpenRAVE_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR})
link_directories(${OpenRAVE_LINK_DIRS})
link_directories(${Boost_LIBRARY_DIRS}) 

add_library(${LIB_NAME} SHARED  ForceSensorMain.cpp
								ForceSensor.cpp
							   )

set_target_properties(${LIB_NAME} PROPERTIES COMPILE_FLAGS "${OpenRAVE_CXXFLAGS}")
set_target_properties(${LIB_NAME} PROPERTIES LINK_FLAGS "${OpenRAVE_LINK_FLAGS} ${PLUGIN_LINK_FLAGS}")

target_link_libraries(${LIB_NAME} ${OpenRAVE_LIBRARY})

if( NOT DEFINED ENV{PLUGIN_INSTALL_DIR} )
    set(PLUGIN_INSTALL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../../plugins")
else( NOT DEFINED ENV{PLUGIN_INSTALL_DIR} )
    set(PLUGIN_INSTALL_DIR "$ENV{PLUGIN_INSTALL_DIR}")
endif( NOT DEFINED ENV{PLUGIN_INSTALL_DIR} )

install(TARGETS ${LIB_NAME} DESTINATION ${PLUGIN_INSTALL_DIR} )
